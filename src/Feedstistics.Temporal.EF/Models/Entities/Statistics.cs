//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.1.2.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Feedstistics.EF.Models.Entity
{
   /// <summary>
   /// Statistics
   /// </summary>
   [System.ComponentModel.Description("Statistics")]
   public partial class Statistics
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Statistics()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Statistics CreateStatisticsUnsafe()
      {
         return new Statistics();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="feedprovidername">Feed Provider Name</param>
      /// <param name="statisticname">Statistics Name.</param>
      /// <param name="sampledatetime">Datetime of statistic sample.</param>
      public Statistics(string feedprovidername, string statisticname, DateTime sampledatetime)
      {
         if (string.IsNullOrEmpty(feedprovidername)) throw new ArgumentNullException(nameof(feedprovidername));
         this.FeedProviderName = feedprovidername;

         if (string.IsNullOrEmpty(statisticname)) throw new ArgumentNullException(nameof(statisticname));
         this.StatisticName = statisticname;

         this.SampleDateTime = sampledatetime;

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="feedprovidername">Feed Provider Name</param>
      /// <param name="statisticname">Statistics Name.</param>
      /// <param name="sampledatetime">Datetime of statistic sample.</param>
      public static Statistics Create(string feedprovidername, string statisticname, DateTime sampledatetime)
      {
         return new Statistics(feedprovidername, statisticname, sampledatetime);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Required, Min length = 1, Max length = 50
      /// Feed Provider Name
      /// </summary>
      [Required]
      [MinLength(1)]
      [MaxLength(50)]
      [StringLength(50)]
      [System.ComponentModel.Description("Feed Provider Name")]
      public string FeedProviderName { get; set; }

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /// <summary>
      /// Required
      /// Datetime of statistic sample.
      /// </summary>
      [Required]
      [System.ComponentModel.Description("Datetime of statistic sample.")]
      public DateTime SampleDateTime { get; set; }

      /// <summary>
      /// Required, Min length = 1, Max length = 50
      /// Statistics Name.
      /// </summary>
      [Required]
      [MinLength(1)]
      [MaxLength(50)]
      [StringLength(50)]
      [System.ComponentModel.Description("Statistics Name.")]
      public string StatisticName { get; set; }

      /// <summary>
      /// Complex value as json.
      /// </summary>
      [System.ComponentModel.Description("Complex value as json.")]
      public string Value { get; set; }

   }
}

